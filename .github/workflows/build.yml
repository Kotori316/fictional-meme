name: Build
on:
  push:
    paths:
      - "app/**"
      - ".github/workflows/build.yml"
      - "Dockerfile"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: Check Java Toolchain and Dependencies
        uses: gradle/gradle-build-action@v2
        with:
          cache-disabled: true
          arguments: |
            javaToolchains 
            --warning-mode all 
            dependencies 
            :app:dependencies
      - name: Test
        uses: gradle/gradle-build-action@v2
        with:
          cache-disabled: true
          arguments: test
      - name: Upload failed test report
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          path: build/reports/tests/*

  build:
    runs-on: ubuntu-latest
    env:
      MC_VERSION: 1.18.2
      JAVA_VERSION: 17
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get image name
        run: |
          i=ghcr.io/${{ github.repository }}/fictional-meme
          echo "IMAGE_NAME=${i,,}" >> $GITHUB_ENV
          t=${{ env.MC_VERSION }}
          echo "TAG=${t,,}" >> $GITHUB_ENV
      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.TAG }}
            ${{ env.IMAGE_NAME }}:latest
          load: true
          build-args: |
            MINECRAFT_VERSION=${{ env.MC_VERSION }}
            JAVA_VERSION=${{ env.JAVA_VERSION }}
      - name: Check java version
        run: |
          docker images
          docker run --rm ${IMAGE_NAME}:${TAG} java --version
          echo "::group::Module List"
          docker run --rm ${IMAGE_NAME}:${TAG} java --list-modules
          echo "::endgroup::"
          jar_path=$(docker run --rm ${IMAGE_NAME}:${TAG} find / -maxdepth 1 -name fictional-meme*.jar)
          echo "Found jar file at $jar_path"
          echo "Latest version of forge"
          docker run --rm ${IMAGE_NAME}:${TAG} java -jar $jar_path
          echo "Latest version of Minecraft ${{ env.MC_VERSION }}"
          docker run --rm ${IMAGE_NAME}:${TAG} java -jar $jar_path ${{ env.MC_VERSION }}
      - name: Push1
        run: docker push ${IMAGE_NAME}:${TAG}
      - name: Push2
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push ${IMAGE_NAME}:latest
