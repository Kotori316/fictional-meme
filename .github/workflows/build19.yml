name: Weekly Build for 1.19

on:
  schedule:
    - cron: "0 5 * * TUE"
  workflow_dispatch:

env:
  TAG_VERSION: 1.19
  MC_VERSION: 1.19.2
  JAVA_VERSION: 17
  BRANCH: 1.19

jobs:
  check_version:
    runs-on: ubuntu-latest
    outputs:
      run_build: ${{ steps.set_output.outputs.run_build }}
    steps:
      - name: Get latest version
        run: |
          JAR_PATH=$(docker run ghcr.io/kotori316/fictional-meme/fictional-meme:${{ env.TAG_VERSION }} find / -maxdepth 1 -name "fictional*.jar")
          LATEST_VERSION=$(docker run ghcr.io/kotori316/fictional-meme/fictional-meme:${{ env.TAG_VERSION }} java -jar "${JAR_PATH}" ${{ env.MC_VERSION }})
          echo "LATEST_VERSION=${LATEST_VERSION}" >> $GITHUB_ENV
      - name: Set output
        id: set_output
        run: |
          set -eu
          IMAGE_VERSION=$(docker run ghcr.io/kotori316/fictional-meme/fictional-meme:${{ env.TAG_VERSION }} cat /forge.txt)
          echo "Event: ${{ github.event_name }}"
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Latest: ${LATEST_VERSION}, Image: ${IMAGE_VERSION}"
            echo "::set-output name=run_build::true"
            exit 0
          fi
          if [ "${LATEST_VERSION}" != "${IMAGE_VERSION}" ]; then
            echo "Run CI to use ${LATEST_VERSION}, before ${IMAGE_VERSION}"
            echo "::set-output name=run_build::true"
          else
            echo "Stop CI because the image has ${IMAGE_VERSION}(latest: ${LATEST_VERSION}), which is the latest."
            echo "::set-output name=run_build::false"
          fi

  build:
    needs: check_version
    if: ${{ fromJSON(needs.check_version.outputs.run_build) }}
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        id: build
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: ghcr.io/kotori316/fictional-meme/fictional-meme:${{ env.TAG_VERSION }}
          push: true
          build-args: |
            MINECRAFT_VERSION=${{ env.MC_VERSION }}
            JAVA_VERSION=${{ env.JAVA_VERSION }}
            PARCHMENT_MINECRAFT_VERSION=1.19.2

  check-FluidTank:
    runs-on: ubuntu-latest
    needs: [ check_version, build ]
    if: ${{ fromJSON(needs.check_version.outputs.run_build) }}
    container:
      image: ghcr.io/kotori316/fictional-meme/fictional-meme@sha256:${{ needs.build.outputs.digest }}
      credentials:
        username: kotori316
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set forge version
        run: echo "CI_FORGE=$(cat /forge.txt)" >> $GITHUB_ENV
      # FluidTank
      - name: Checkout FluidTank
        uses: actions/checkout@v3
        with:
          repository: 'Kotori316/FluidTank'
          ref: '${{ env.BRANCH }}'
          path: fluidtank
      - name: Permission of gradlew
        run: chmod +x ./gradlew
        working-directory: fluidtank
      - name: Test FluidTank
        uses: gradle/gradle-build-action@v2
        with:
          cache-disabled: true
          arguments: test copyGameTestTemplate runGameTestServer
          build-root-directory: fluidtank

  check-QuarryPlus:
    runs-on: ubuntu-latest
    needs: [ check_version, build ]
    if: ${{ fromJSON(needs.check_version.outputs.run_build) }}
    container:
      image: ghcr.io/kotori316/fictional-meme/fictional-meme@sha256:${{ needs.build.outputs.digest }}
      credentials:
        username: kotori316
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set forge version
        run: echo "CI_FORGE=$(cat /forge.txt)" >> $GITHUB_ENV
      # QuarryPlus
      - name: Checkout QuarryPlus
        uses: actions/checkout@v3
        with:
          repository: 'Kotori316/QuarryPlus'
          ref: '${{ env.BRANCH }}'
          path: quarryplus
      - name: Permission of gradlew
        run: chmod +x ./gradlew
        working-directory: quarryplus
      - name: Test QuarryPlus
        uses: gradle/gradle-build-action@v2
        with:
          cache-disabled: true
          arguments: test copyGameTestTemplate runGameTestServer
          build-root-directory: quarryplus
