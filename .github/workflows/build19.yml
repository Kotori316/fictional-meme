name: Weekly Build for 1.19

on:
  schedule:
    - cron: "0 5 * * TUE"
  workflow_dispatch:

env:
  TAG_VERSION: 1.19
  MC_VERSION: 1.19.2
  JAVA_VERSION: 17
  BRANCH: 1.19

jobs:
  check_version:
    runs-on: ubuntu-latest
    outputs:
      run_build: ${{ steps.set_output.outputs.run_build }}
    steps:
      - name: Get latest version
        run: |
          LATEST_VERSION=$(docker run ghcr.io/kotori316/fictional-meme/fictional-meme:${{ env.TAG_VERSION }} /get_latest.sh ${{ env.MC_VERSION }})
          echo "LATEST_VERSION=${LATEST_VERSION}" >> $GITHUB_ENV
      - name: Set output
        id: set_output
        run: |
          set -eu
          IMAGE_VERSION=$(docker run ghcr.io/kotori316/fictional-meme/fictional-meme:${{ env.TAG_VERSION }} cat /forge.txt)
          echo "Event: ${{ github.event_name }}"
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Latest: ${LATEST_VERSION}, Image: ${IMAGE_VERSION}"
            echo "Force Run"
            echo "run_build=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          if [ "${LATEST_VERSION}" != "${IMAGE_VERSION}" ]; then
            echo "Run CI to use ${LATEST_VERSION}, before ${IMAGE_VERSION}"
            echo "run_build=true" >> $GITHUB_OUTPUT
          else
            echo "Stop CI because the image has ${IMAGE_VERSION}(latest: ${LATEST_VERSION}), which is the latest."
            echo "run_build=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check_version
    if: ${{ fromJSON(needs.check_version.outputs.run_build) }}
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        id: build
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: ghcr.io/kotori316/fictional-meme/fictional-meme:${{ env.TAG_VERSION }}
          push: true
          build-args: |
            MINECRAFT_VERSION=${{ env.MC_VERSION }}
            JAVA_VERSION=${{ env.JAVA_VERSION }}
            PARCHMENT_MINECRAFT_VERSION=1.19.2
            QUARRY_BRANCH=1.19

  check-mods:
    needs: [ check_version, build ]
    if: ${{ fromJSON(needs.check_version.outputs.run_build) }}
    strategy:
      matrix:
        repository: [FluidTank, QuarryPlus]
    uses: ./.github/workflows/test-repo.yml
    with:
      repository: 'Kotori316/${{ matrix.repository }}'
      branch: 1.19
      container-image: ghcr.io/kotori316/fictional-meme/fictional-meme@${{ needs.build.outputs.digest }}
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}
