plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id "org.beryx.jlink" version "2.24.0"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
repositories {
    mavenCentral()
}

group = 'com.kotori316'
archivesBaseName = "fictional-meme"
version = "2.0"

dependencies {
    String JUPITER_VERSION = '5.7.0'
    // Use JUnit Jupiter API for testing.
    testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: JUPITER_VERSION)
    testImplementation(group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: JUPITER_VERSION)

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly(group: 'org.junit.jupiter', name: 'junit-jupiter-engine')

    // This dependency is used by the application.
    // implementation(group: 'com.google.guava', name: 'guava', version: '30.1.1-jre')
    implementation(group: 'com.google.code.gson', name: 'gson', version: '2.8.6')
}

application {
    // Define the main class for the application.
    String mainName = "com.kotori316.fictional.App"
    mainClass.set(mainName)
    mainModule.set("fictional.meme")
}

jlink {
    addOptions('--compress', '2', '--no-header-files', '--no-man-pages')
    launcher {
        it.name = "fictional-meme"
    }
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}
